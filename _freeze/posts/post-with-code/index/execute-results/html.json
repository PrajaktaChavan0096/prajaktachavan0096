{
  "hash": "c1de01d51f41a3ccd02106e865c90f9e",
  "result": {
    "markdown": "---\ntitle: \"Post with the code\"\nauthor: \"Prajakta Chavan\"\ndate: \"2023-09-09\"\ncategories: [code, analysis]\nimage: \"rlogo.jpg\"\n---\n\n\nThis post contains the executable code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(shiny)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\n# Loading the mobile and landline datasets\nmobile_data <- read.csv(\"mobile.csv\")\nlandline_data <- read.csv(\"landline.csv\")\n\nui <- fluidPage(\n  \n  titlePanel(\"Mobile and Landline Subscription Data Analysis\"),\n  \n  h3(\"1.Landline Subscribers in different Countries\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      # Select the country\n      selectInput(\"country\", \"Country:\", choices = unique(landline_data$entity))\n    ),\n    \n    mainPanel(\n      # Plot the histogram\n      plotOutput(\"landlinesub\")\n    )\n  ),\n  \n  h3(\"2.Mobile Subscribers in different Countries\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      # Select the country\n      selectInput(\"country\", \"Country:\", choices = unique(mobile_data$entity))\n    ),\n    \n    mainPanel(\n      # Plot the histogram\n      plotOutput(\"mobilesub\")\n    )\n  ),\n  \n  h3(\"3. Mobile Subscriptions Based on Years\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      # Select the year range to explore\n      sliderInput(\"yearRangeMobile\", \"Year range:\", min = 1990, max = 2017, value = c(1990, 2017)),\n    ),\n    \n    mainPanel(\n      # Plot the number of fixed mobile subscriptions per 100 people\n      plotOutput(\"yearmobilePlot\")\n    )\n  ),\n  \n  h3(\"4. Landline Subscriptions Based on Years\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      # Select the year range to explore\n      sliderInput(\"yearRangeLandline\", \"Year range:\", min = 1990, max = 2017, value = c(1990, 2017)),\n    ),\n    \n    mainPanel(\n      # Plot the number of fixed telephone subscriptions per 100 people\n      plotOutput(\"yearlandlinePlot\")\n    )\n  ),\n  \n  h3(\"Telephone Subscribers by Continent\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      # Select the continent\n      radioButtons(\"continent\", \"Continent:\", choices = unique(landline_data$continent)),\n      \n      # Select the subscription type\n      radioButtons(\"subscription\", \"Subscription Type:\", choices = c(\"Mobile\", \"Landline\"))\n    ),\n    \n    mainPanel(\n      # Plot the histogram\n      plotOutput(\"plot\")\n    )\n  ),\n  \n  fluidRow(\n    column(10,\n           div(class = \"about\",\n               uiOutput('about'))\n    )\n  ),\n  includeCSS(\"styles.css\")\n)\n\nserver <- function(input, output) {\n  \n  output$landlinesub <- renderPlot({\n    \n    # Filter the data for the selected country\n    data1 <- landline_data %>%\n      filter(entity == input$country)\n    \n    # Create the histogram\n    ggplot(data1, aes(landline_subs)) +\n      geom_histogram(bins = 30, fill=\"#465485\") +\n      theme_bw(base_size = 14) +\n      labs(x = \"Fixed telephone subscribers (per 100 people)\", y = \"Frequency\")\n  })\n  \n  output$mobilesub <- renderPlot({\n    \n    # Filter the data for the selected country\n    data2 <- mobile_data %>%\n      filter(entity == input$country)\n    \n    # Create the histogram\n    ggplot(data2, aes(mobile_subs)) +\n      geom_histogram(bins = 30, fill=\"skyblue\") +\n      theme_bw(base_size = 14) +\n      labs(x = \"Fixed telephone subscribers (per 100 people)\", y = \"Frequency\")\n  })\n  \n  output$yearmobilePlot <- renderPlot({\n    \n    # Filter the data for the selected year range\n    data3 <- mobile_data %>%\n      filter(year >= input$yearRangeMobile[1], year <= input$yearRangeMobile[2])\n    \n    # Create the scatter plot\n    ggplot(data3, aes(year, mobile_subs)) +\n      geom_point(color = \"pink\", size = 3) +\n      theme_bw(base_size = 14) +\n      labs(x = \"Year\", y = \"Fixed mobile subscriptions (per 100 people)\")\n  })\n  \n  output$yearlandlinePlot <- renderPlot({\n    \n    # Filter the data for the selected year range\n    data4 <- landline_data %>%\n      filter(year >= input$yearRangeLandline[1], year <= input$yearRangeLandline[2])\n    \n    # Create the scatter plot\n    ggplot(data4, aes(year, landline_subs)) +\n      geom_point(color = \"darkblue\", size = 3) +\n      theme_bw(base_size = 14) +\n      labs(x = \"Year\", y = \"Fixed telephone subscriptions (per 100 people)\")\n  })\n  \n  output$plot <- renderPlot({\n    \n    # Determine which data to use based on subscription type\n    data5 <- if (input$subscription == \"Mobile\") {\n      mobile_data\n    } else {\n      landline_data\n    }\n    \n    # Filter the data for the selected continent\n    filtered_data <- data5 %>%\n      filter(continent == input$continent)\n    \n    # Create the plot\n    ggplot(filtered_data, aes_string(x = ifelse(input$subscription == \"Mobile\", \"mobile_subs\", \"landline_subs\"))) +\n      geom_histogram(bins = 30, fill=\"seagreen\") +\n      theme_bw(base_size = 14) +\n      labs(x = ifelse(input$subscription == \"Mobile\", \"Mobile Subscribers\", \"Landline Subscribers\"),\n           y = \"Frequency\")\n  })\n  \n  output$about <- renderUI({\n    knitr::knit(\"about.Rmd\", quiet = TRUE) %>%\n      markdown::markdownToHTML(fragment.only = TRUE) %>%\n      HTML()\n  })\n}\n\nshinyApp(ui = ui, server = server)\n```\n\n::: {.cell-output-display}\n`<div style=\"width: 100% ; height: 400px ; text-align: center; box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;\" class=\"muted well\">Shiny applications not supported in static R Markdown documents</div>`{=html}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}