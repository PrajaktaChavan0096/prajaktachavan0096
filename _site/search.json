[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Shiny Application",
    "section": "",
    "text": "Data\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nPost with the code\n\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nSep 9, 2023\n\n\nPrajakta Chavan\n\n\n\n\n\n\n  \n\n\n\n\nBlog on Shiny Application\n\n\n\n\n\n\n\napps\n\n\n\n\n\n\n\n\n\n\n\nSep 9, 2023\n\n\nPrajakta Chavan\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post with the code",
    "section": "",
    "text": "This post contains the executable code.\n\nlibrary(shiny)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.3     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Loading the mobile and landline datasets\nmobile_data &lt;- read.csv(\"mobile.csv\")\nlandline_data &lt;- read.csv(\"landline.csv\")\n\nui &lt;- fluidPage(\n  \n  titlePanel(\"Mobile and Landline Subscription Data Analysis\"),\n  \n  h3(\"1.Landline Subscribers in different Countries\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      # Select the country\n      selectInput(\"country\", \"Country:\", choices = unique(landline_data$entity))\n    ),\n    \n    mainPanel(\n      # Plot the histogram\n      plotOutput(\"landlinesub\")\n    )\n  ),\n  \n  h3(\"2.Mobile Subscribers in different Countries\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      # Select the country\n      selectInput(\"country\", \"Country:\", choices = unique(mobile_data$entity))\n    ),\n    \n    mainPanel(\n      # Plot the histogram\n      plotOutput(\"mobilesub\")\n    )\n  ),\n  \n  h3(\"3. Mobile Subscriptions Based on Years\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      # Select the year range to explore\n      sliderInput(\"yearRangeMobile\", \"Year range:\", min = 1990, max = 2017, value = c(1990, 2017)),\n    ),\n    \n    mainPanel(\n      # Plot the number of fixed mobile subscriptions per 100 people\n      plotOutput(\"yearmobilePlot\")\n    )\n  ),\n  \n  h3(\"4. Landline Subscriptions Based on Years\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      # Select the year range to explore\n      sliderInput(\"yearRangeLandline\", \"Year range:\", min = 1990, max = 2017, value = c(1990, 2017)),\n    ),\n    \n    mainPanel(\n      # Plot the number of fixed telephone subscriptions per 100 people\n      plotOutput(\"yearlandlinePlot\")\n    )\n  ),\n  \n  h3(\"Telephone Subscribers by Continent\"),\n  \n  sidebarLayout(\n    sidebarPanel(\n      # Select the continent\n      radioButtons(\"continent\", \"Continent:\", choices = unique(landline_data$continent)),\n      \n      # Select the subscription type\n      radioButtons(\"subscription\", \"Subscription Type:\", choices = c(\"Mobile\", \"Landline\"))\n    ),\n    \n    mainPanel(\n      # Plot the histogram\n      plotOutput(\"plot\")\n    )\n  ),\n  \n  fluidRow(\n    column(10,\n           div(class = \"about\",\n               uiOutput('about'))\n    )\n  ),\n  includeCSS(\"styles.css\")\n)\n\nserver &lt;- function(input, output) {\n  \n  output$landlinesub &lt;- renderPlot({\n    \n    # Filter the data for the selected country\n    data1 &lt;- landline_data %&gt;%\n      filter(entity == input$country)\n    \n    # Create the histogram\n    ggplot(data1, aes(landline_subs)) +\n      geom_histogram(bins = 30, fill=\"#465485\") +\n      theme_bw(base_size = 14) +\n      labs(x = \"Fixed telephone subscribers (per 100 people)\", y = \"Frequency\")\n  })\n  \n  output$mobilesub &lt;- renderPlot({\n    \n    # Filter the data for the selected country\n    data2 &lt;- mobile_data %&gt;%\n      filter(entity == input$country)\n    \n    # Create the histogram\n    ggplot(data2, aes(mobile_subs)) +\n      geom_histogram(bins = 30, fill=\"skyblue\") +\n      theme_bw(base_size = 14) +\n      labs(x = \"Fixed telephone subscribers (per 100 people)\", y = \"Frequency\")\n  })\n  \n  output$yearmobilePlot &lt;- renderPlot({\n    \n    # Filter the data for the selected year range\n    data3 &lt;- mobile_data %&gt;%\n      filter(year &gt;= input$yearRangeMobile[1], year &lt;= input$yearRangeMobile[2])\n    \n    # Create the scatter plot\n    ggplot(data3, aes(year, mobile_subs)) +\n      geom_point(color = \"pink\", size = 3) +\n      theme_bw(base_size = 14) +\n      labs(x = \"Year\", y = \"Fixed mobile subscriptions (per 100 people)\")\n  })\n  \n  output$yearlandlinePlot &lt;- renderPlot({\n    \n    # Filter the data for the selected year range\n    data4 &lt;- landline_data %&gt;%\n      filter(year &gt;= input$yearRangeLandline[1], year &lt;= input$yearRangeLandline[2])\n    \n    # Create the scatter plot\n    ggplot(data4, aes(year, landline_subs)) +\n      geom_point(color = \"darkblue\", size = 3) +\n      theme_bw(base_size = 14) +\n      labs(x = \"Year\", y = \"Fixed telephone subscriptions (per 100 people)\")\n  })\n  \n  output$plot &lt;- renderPlot({\n    \n    # Determine which data to use based on subscription type\n    data5 &lt;- if (input$subscription == \"Mobile\") {\n      mobile_data\n    } else {\n      landline_data\n    }\n    \n    # Filter the data for the selected continent\n    filtered_data &lt;- data5 %&gt;%\n      filter(continent == input$continent)\n    \n    # Create the plot\n    ggplot(filtered_data, aes_string(x = ifelse(input$subscription == \"Mobile\", \"mobile_subs\", \"landline_subs\"))) +\n      geom_histogram(bins = 30, fill=\"seagreen\") +\n      theme_bw(base_size = 14) +\n      labs(x = ifelse(input$subscription == \"Mobile\", \"Mobile Subscribers\", \"Landline Subscribers\"),\n           y = \"Frequency\")\n  })\n  \n  output$about &lt;- renderUI({\n    knitr::knit(\"about.Rmd\", quiet = TRUE) %&gt;%\n      markdown::markdownToHTML(fragment.only = TRUE) %&gt;%\n      HTML()\n  })\n}\n\nshinyApp(ui = ui, server = server)\n\nShiny applications not supported in static R Markdown documents"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Blog on Shiny Application",
    "section": "",
    "text": "This is a blog on the shiny application made using R.\nOverview\nAt present, everyone wants a prediction application to make predictions in AI mode. Here, this shiny application is very much good to make predictions for mobiles and landlines around the world. This application is well based in making the prediction of this mobile phone and landline users. In this case, there will be a bar chart, stack cart or like that, in this application. This application was made by the R studio with a script. Hence this will be very much effective software in making the analysis  with the prediction of mobile phone users. In this case all the sections will represent the positive impact and negative impact of R.\nData Description\nLandline Dataset\n\n\n\nFigure 1: Landline Data set Image\n\n\nThese are the tabular format of the description of the dataset. In the landline dataset, there are many entities (Fenibo et al. 2019). The first entity is the country name, the second is the country code, the third entity is the increasing year, the fourth entity is the total population of each country in a particular year, the fifth entity is the GDP per capita of a country, the sixth data is the number of subscribers of the telephone users in a year, and in the last entity, there is the continent name of each country.\n\nTable 1: Data Description of the Landline Dataset\n\n\n\n\n\n\nData Column\nDescriptions\n\n\n\n\nEntity\nThis column stores the data of countries\n\n\nCode\nThis column shows the country code\n\n\nYear\nThis is the increasing year column\n\n\nTotal Population\nThis is the total population of each year\n\n\nGDP per capita\nThis column shows the country’s GDP per capita for each year\n\n\nLandline subs\nIn this column, there are the total subscription numbers of telephone users.\n\n\nContinent\nIn this column, there is the continent name of each country\n\n\n\nMobile Dataset\n\n\n\nFigure 2: Mobile dataset image\n\n\nIn the mobile dataset, there are entities that are the same as in the landline dataset. The first entity is the country name, the second one is the country code, the third one is the year that is used to denote per-year changes, the fourth entity is the total population, which is the per-year population, the next entity is GDP per capita of each year, the sixth entity is the number of mobile subscribers of a particular country in a particular year. The last entity is the name of the country’s continent.\n\nTable 2: Data description of the Mobile Dataset\n\n\n\n\n\n\nData Coulmn\nData Descriptions\n\n\n\n\nEntity\nThis is the country name column\n\n\nCode\nThis is the country name column\n\n\nYear\nThis column shows the country code\n\n\nTotal Population\nIn this column, there are increasing years\n\n\nGDP per capita\nThis is the GDP per capita of every year\n\n\nMobile subs\nThe number of mobile subscribers every year is in this column\n\n\nContinent\nThis column shows the continent of each country\n\n\n\nData Story\nThe evaluation of mobile and landline data is a critical aspect of understanding verbal exchange styles and trends. In this evaluation, we will be using RStudio to research cellular and landline data. First of all, import the essential libraries and information units into R Studio. The information units for each cell and landline statistics might be in CSV layout. Use the imput.csv() feature to import the record sets into R Studio (Harrer et al. 2021). As soon as the records units are imported, merge them with the use of the merge() characteristic. This could allow us to examine and evaluate the statistics units. Subsequently, some fundamental information is carried out descriptive information at the merged statisti\n\n\n\nFigure 3: Different country Landline subscriber\n\n\nThis could encompass calculating the suggest, median, popular deviation, and range for each cell and landline facts. Histograms and box plots are created to visualize the distribution of the facts. After finishing the descriptive records, some inferential statistics are carried out to test for good-sized differences between cellular and landline statistics (Massikunta et al. 2022). This will consist of carrying out t-exams and ANOVA assessments to determine if there are any substantial variations in name period, call frequency, and speak-to-type between cellular and landline records.\n\n\n\nFigure 4: Different country Mobile subscriber\n\n\nEventually, visualizations to assist us in better understanding the facts are created. This can include growing scatter plots and warmth maps to visualize the connection between exclusive variables within the data set (McGuinness and Higgins, 2021).  Bar charts and pie charts are created to visualize the distribution of call types and contact frequencies. Common, reading cell and landline facts in R Studio can offer valuable insights into conversation styles and trends.\n\n\n\nFigure 5: Different Country Mobile Subscribers in Different Years\n\n\nVia performing descriptive and inferential data, the similarities and variations can be highly apprehended among mobile and landline statistics. Visualizations can also help us to better understand the records and talk about our findings to others.\n\n\n\nFigure 6: Different Country Telephone Subscribers in Different Years\n\n\nBy that time mobile user numbers are increasing and landline user numbers are decreasing. This app shows the data in graphical format on many kinds of graphs (Ramachandran and Tsokos, 2020). This app will help to see the downfall of landlines and the growth of mobile users. In the future one can add many features that increase the potentiality of the app. \nAdvantages\nThis shiny app analyzes the results of the dataset that is given to it.\n\nHere a landline dataset and a mobile dataset are given. In those datasets, there are many numbers of data (Sishodia et al. 2021). These data sets are used in this app.\nThe app mainly analyzes the data of landlines in different countries in different years and the mobile dataset has the data of the numbers of different countries in different years.\nHere the analysis is about the reduction or increase of mobile users and landline users in different countries. This will help to forecast the data about the landline users and mobile users.\n\nConclusion\nThe “Shiny” Package in R is used for the construction of a website in Quarto. It makes it possible to create a website that is easily interactive and dynamic web pages. Page layout is used for the interactive documents and it is narrated and dispersed by the components of the Shiny and is utilized to create a whole blog website in R. Some can be hybrid and it can be imagined as a sidebar on the left side that contains inputs.\nReference List\nJournals\nFenibo, E.O., Ijoma, G.N., Selvarajan, R. and Chikere, C.B., 2019. Microbial surfactants: The next generation multifunctional biomolecules for applications in the petroleum industry and its associated environmental remediation. Microorganisms, 7(11), p.581.\nHarrer, M., Cuijpers, P., Furukawa, T. and Ebert, D., 2021. Doing meta-analysis with R: A hands-on guide. Chapman and Hall/CRC.\nMaddikunta, P.K.R., Pham, Q.V., Prabadevi, B., Deepa, N., Dev, K., Gadekallu, T.R., Ruby, R. and Liyanage, M., 2022. Industry 5.0: A survey on enabling technologies and potential applications. Journal of Industrial Information Integration, 26, p.100257.\nMcGuinness, L.A. and Higgins, J.P., 2021. Risk‐of‐bias VISualization (robvis): an R package and Shiny web app for visualizing risk‐of‐bias assessments. Research synthesis methods, 12(1), pp.55-61.\nRamachandran, K.M. and Tsokos, C.P., 2020. Mathematical statistics with applications in R. Academic Press.\nSishodia, R.P., Ray, R.L. and Singh, S.K., 2020. Applications of remote sensing in precision agriculture: A review. Remote Sensing, 12(19), p.3136."
  }
]